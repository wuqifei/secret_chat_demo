// Code generated by protoc-gen-go. DO NOT EDIT.
// source: confirm.proto

package protomodel

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ConfirmS2C struct {
	RandomKey            string   `protobuf:"bytes,1,opt,name=random_key,json=randomKey,proto3" json:"random_key,omitempty"`
	ClientId             int64    `protobuf:"varint,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmS2C) Reset()         { *m = ConfirmS2C{} }
func (m *ConfirmS2C) String() string { return proto.CompactTextString(m) }
func (*ConfirmS2C) ProtoMessage()    {}
func (*ConfirmS2C) Descriptor() ([]byte, []int) {
	return fileDescriptor_confirm_f0e466456e42b85f, []int{0}
}
func (m *ConfirmS2C) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmS2C.Unmarshal(m, b)
}
func (m *ConfirmS2C) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmS2C.Marshal(b, m, deterministic)
}
func (dst *ConfirmS2C) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmS2C.Merge(dst, src)
}
func (m *ConfirmS2C) XXX_Size() int {
	return xxx_messageInfo_ConfirmS2C.Size(m)
}
func (m *ConfirmS2C) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmS2C.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmS2C proto.InternalMessageInfo

func (m *ConfirmS2C) GetRandomKey() string {
	if m != nil {
		return m.RandomKey
	}
	return ""
}

func (m *ConfirmS2C) GetClientId() int64 {
	if m != nil {
		return m.ClientId
	}
	return 0
}

type ConfirmC2S struct {
	TimeStamp            int64    `protobuf:"varint,1,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmC2S) Reset()         { *m = ConfirmC2S{} }
func (m *ConfirmC2S) String() string { return proto.CompactTextString(m) }
func (*ConfirmC2S) ProtoMessage()    {}
func (*ConfirmC2S) Descriptor() ([]byte, []int) {
	return fileDescriptor_confirm_f0e466456e42b85f, []int{1}
}
func (m *ConfirmC2S) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmC2S.Unmarshal(m, b)
}
func (m *ConfirmC2S) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmC2S.Marshal(b, m, deterministic)
}
func (dst *ConfirmC2S) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmC2S.Merge(dst, src)
}
func (m *ConfirmC2S) XXX_Size() int {
	return xxx_messageInfo_ConfirmC2S.Size(m)
}
func (m *ConfirmC2S) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmC2S.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmC2S proto.InternalMessageInfo

func (m *ConfirmC2S) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

func init() {
	proto.RegisterType((*ConfirmS2C)(nil), "protomodel.ConfirmS2C")
	proto.RegisterType((*ConfirmC2S)(nil), "protomodel.ConfirmC2S")
}

func init() { proto.RegisterFile("confirm.proto", fileDescriptor_confirm_f0e466456e42b85f) }

var fileDescriptor_confirm_f0e466456e42b85f = []byte{
	// 144 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xce, 0xcf, 0x4b,
	0xcb, 0x2c, 0xca, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x02, 0x53, 0xb9, 0xf9, 0x29,
	0xa9, 0x39, 0x4a, 0x1e, 0x5c, 0x5c, 0xce, 0x10, 0xc9, 0x60, 0x23, 0x67, 0x21, 0x59, 0x2e, 0xae,
	0xa2, 0xc4, 0xbc, 0x94, 0xfc, 0xdc, 0xf8, 0xec, 0xd4, 0x4a, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce,
	0x20, 0x4e, 0x88, 0x88, 0x77, 0x6a, 0xa5, 0x90, 0x34, 0x17, 0x67, 0x72, 0x4e, 0x66, 0x6a, 0x5e,
	0x49, 0x7c, 0x66, 0x8a, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x73, 0x10, 0x07, 0x44, 0xc0, 0x33, 0x45,
	0x49, 0x1b, 0x6e, 0x92, 0xb3, 0x51, 0x30, 0xc8, 0xa4, 0x92, 0xcc, 0xdc, 0xd4, 0xf8, 0xe2, 0x92,
	0xc4, 0xdc, 0x02, 0xb0, 0x49, 0xcc, 0x41, 0x9c, 0x20, 0x91, 0x60, 0x90, 0x40, 0x12, 0x1b, 0xd8,
	0x09, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x32, 0x44, 0x0c, 0xde, 0x9a, 0x00, 0x00, 0x00,
}
